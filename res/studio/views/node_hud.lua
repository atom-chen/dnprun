--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Panel_1
local Panel_1 = ccui.Layout:create()
Panel_1:ignoreContentAdaptWithSize(false)
Panel_1:setClippingEnabled(false)
Panel_1:setBackGroundColorType(1)
Panel_1:setBackGroundColor({r = 255, g = 255, b = 0})
Panel_1:setBackGroundColorOpacity(0)
Panel_1:setLayoutComponentEnabled(true)
Panel_1:setName("Panel_1")
Panel_1:setTag(2)
Panel_1:setCascadeColorEnabled(true)
Panel_1:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_1)
layout:setSize({width = 750.0000, height = 200.0000})
layout:setRightMargin(-750.0000)
layout:setTopMargin(-200.0000)
Node:addChild(Panel_1)

--Create Sprite_3
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/common.plist")
local Sprite_3 = cc.Sprite:createWithSpriteFrameName("l-q.png")
Sprite_3:setName("Sprite_3")
Sprite_3:setTag(5)
Sprite_3:setCascadeColorEnabled(true)
Sprite_3:setCascadeOpacityEnabled(true)
Sprite_3:setPosition(80.0000, 106.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Sprite_3)
layout:setPositionPercentX(0.1067)
layout:setPositionPercentY(0.5300)
layout:setPercentWidth(0.2147)
layout:setPercentHeight(0.8000)
layout:setSize({width = 161.0000, height = 160.0000})
layout:setLeftMargin(-0.5000)
layout:setRightMargin(589.5000)
layout:setTopMargin(14.0000)
layout:setBottomMargin(26.0000)
Sprite_3:setBlendFunc({src = 1, dst = 771})
Panel_1:addChild(Sprite_3)

--Create Slider_1
local Slider_1 = ccui.Slider:create()
Slider_1:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/common.plist")
Slider_1:loadBarTexture("loading-bar-1.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/common.plist")
Slider_1:loadProgressBarTexture("loading-bar-2.png",1)
Slider_1:loadSlidBallTextureNormal("Default/SliderNode_Normal.png",0)
Slider_1:loadSlidBallTexturePressed("Default/SliderNode_Press.png",0)
Slider_1:loadSlidBallTextureDisabled("Default/SliderNode_Disable.png",0)
Slider_1:setPercent(99)
Slider_1:setTouchEnabled(false);
Slider_1:setLayoutComponentEnabled(true)
Slider_1:setName("Slider_1")
Slider_1:setTag(8)
Slider_1:setCascadeColorEnabled(true)
Slider_1:setCascadeOpacityEnabled(true)
Slider_1:setVisible(false)
Slider_1:setPosition(498.0000, 35.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Slider_1)
layout:setPositionPercentX(0.6640)
layout:setPositionPercentY(0.1750)
layout:setPercentWidth(0.6360)
layout:setPercentHeight(0.1250)
layout:setSize({width = 477.0000, height = 25.0000})
layout:setLeftMargin(259.5000)
layout:setRightMargin(13.5000)
layout:setTopMargin(152.5000)
layout:setBottomMargin(22.5000)
Panel_1:addChild(Slider_1)

--Create BitmapFontLabel_1
local BitmapFontLabel_1 = ccui.TextBMFont:create()
BitmapFontLabel_1:setString([[kitty毛]])
BitmapFontLabel_1:setLayoutComponentEnabled(true)
BitmapFontLabel_1:setName("BitmapFontLabel_1")
BitmapFontLabel_1:setTag(10)
BitmapFontLabel_1:setCascadeColorEnabled(true)
BitmapFontLabel_1:setCascadeOpacityEnabled(true)
BitmapFontLabel_1:setPosition(245.0005, 140.9998)
BitmapFontLabel_1:setScaleX(3.3677)
BitmapFontLabel_1:setScaleY(2.7333)
BitmapFontLabel_1:setColor({r = 255, g = 0, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(BitmapFontLabel_1)
layout:setPositionPercentX(0.3267)
layout:setPositionPercentY(0.7050)
layout:setPercentWidth(0.0453)
layout:setPercentHeight(0.0750)
layout:setSize({width = 34.0000, height = 15.0000})
layout:setLeftMargin(228.0005)
layout:setRightMargin(487.9995)
layout:setTopMargin(51.5002)
layout:setBottomMargin(133.4998)
Panel_1:addChild(BitmapFontLabel_1)

--Create Text_1
local Text_1 = ccui.Text:create()
Text_1:ignoreContentAdaptWithSize(true)
Text_1:setTextAreaSize({width = 0, height = 0})
Text_1:setFontSize(20)
Text_1:setString([[你好是white是吗]])
Text_1:setTouchScaleChangeEnabled(true)
Text_1:setLayoutComponentEnabled(true)
Text_1:setName("Text_1")
Text_1:setTag(11)
Text_1:setCascadeColorEnabled(true)
Text_1:setCascadeOpacityEnabled(true)
Text_1:setPosition(516.0000, 149.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Text_1)
layout:setPositionPercentX(0.6880)
layout:setPositionPercentY(0.7450)
layout:setPercentWidth(0.1960)
layout:setPercentHeight(0.1150)
layout:setSize({width = 147.0000, height = 23.0000})
layout:setLeftMargin(442.5000)
layout:setRightMargin(160.5000)
layout:setTopMargin(39.5000)
layout:setBottomMargin(137.5000)
Panel_1:addChild(Text_1)

--Create TextField_1
local TextField_1 = ccui.TextField:create()
TextField_1:ignoreContentAdaptWithSize(false)
tolua.cast(TextField_1:getVirtualRenderer(), "cc.Label"):setLineBreakWithoutSpace(true)
TextField_1:setFontName("Resource/font/FZY4K.ttf")
TextField_1:setFontSize(20)
TextField_1:setPlaceHolder("心情很好哈")
TextField_1:setString([[]])
TextField_1:setMaxLength(10)
TextField_1:setLayoutComponentEnabled(true)
TextField_1:setName("TextField_1")
TextField_1:setTag(28)
TextField_1:setCascadeColorEnabled(true)
TextField_1:setCascadeOpacityEnabled(true)
TextField_1:setPosition(391.0000, 107.0000)
TextField_1:setColor({r = 144, g = 238, b = 144})
layout = ccui.LayoutComponent:bindLayoutComponent(TextField_1)
layout:setPositionPercentX(0.5213)
layout:setPositionPercentY(0.5350)
layout:setPercentWidth(0.1147)
layout:setPercentHeight(0.1150)
layout:setSize({width = 86.0000, height = 23.0000})
layout:setLeftMargin(348.0000)
layout:setRightMargin(316.0000)
layout:setTopMargin(81.5000)
layout:setBottomMargin(95.5000)
Panel_1:addChild(TextField_1)

--Create TextField_2
local TextField_2 = ccui.TextField:create()
TextField_2:ignoreContentAdaptWithSize(false)
tolua.cast(TextField_2:getVirtualRenderer(), "cc.Label"):setLineBreakWithoutSpace(true)
TextField_2:setFontSize(20)
TextField_2:setPlaceHolder("Text Field")
TextField_2:setString([[]])
TextField_2:setMaxLengthEnabled(true)
TextField_2:setMaxLength(10)
TextField_2:setPasswordEnabled(true)
TextField_2:setTouchEnabled(false);
TextField_2:setLayoutComponentEnabled(true)
TextField_2:setName("TextField_2")
TextField_2:setTag(29)
TextField_2:setCascadeColorEnabled(true)
TextField_2:setCascadeOpacityEnabled(true)
TextField_2:setPosition(240.0000, 85.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(TextField_2)
layout:setPositionPercentX(0.3200)
layout:setPositionPercentY(0.4250)
layout:setPercentWidth(0.1147)
layout:setPercentHeight(0.1150)
layout:setSize({width = 86.0000, height = 23.0000})
layout:setLeftMargin(197.0000)
layout:setRightMargin(467.0000)
layout:setTopMargin(103.5000)
layout:setBottomMargin(73.5000)
Panel_1:addChild(TextField_2)

--Create TextField_5
local TextField_5 = ccui.TextField:create()
TextField_5:ignoreContentAdaptWithSize(false)
tolua.cast(TextField_5:getVirtualRenderer(), "cc.Label"):setLineBreakWithoutSpace(true)
TextField_5:setFontSize(20)
TextField_5:setPlaceHolder("Text Field")
TextField_5:setString([[]])
TextField_5:setMaxLength(10)
TextField_5:setLayoutComponentEnabled(true)
TextField_5:setName("TextField_5")
TextField_5:setTag(46)
TextField_5:setCascadeColorEnabled(true)
TextField_5:setCascadeOpacityEnabled(true)
TextField_5:setPosition(500.0000, 98.5580)
layout = ccui.LayoutComponent:bindLayoutComponent(TextField_5)
layout:setPositionPercentX(0.6667)
layout:setPositionPercentY(0.4928)
layout:setPercentWidth(0.1147)
layout:setPercentHeight(0.1150)
layout:setSize({width = 86.0000, height = 23.0000})
layout:setLeftMargin(457.0000)
layout:setRightMargin(207.0000)
layout:setTopMargin(89.9420)
layout:setBottomMargin(87.0580)
Panel_1:addChild(TextField_5)

--Create Button_3
local Button_3 = ccui.Button:create()
Button_3:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/common.plist")
Button_3:loadTextureNormal("btn-165-86-1.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/common.plist")
Button_3:loadTexturePressed("btn-165-86-2.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/common.plist")
Button_3:loadTextureDisabled("btn-165-86-3.png",1)
Button_3:setTitleFontSize(14)
Button_3:setTitleText("Button")
Button_3:setTitleColor({r = 65, g = 65, b = 70})
Button_3:setScale9Enabled(true)
Button_3:setCapInsets({x = 15, y = 11, width = 135, height = 64})
Button_3:setLayoutComponentEnabled(true)
Button_3:setName("Button_3")
Button_3:setTag(57)
Button_3:setCascadeColorEnabled(true)
Button_3:setCascadeOpacityEnabled(true)
Button_3:setPosition(656.0000, 127.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Button_3)
layout:setPositionPercentX(0.8747)
layout:setPositionPercentY(0.6350)
layout:setPercentWidth(0.2200)
layout:setPercentHeight(0.4300)
layout:setSize({width = 165.0000, height = 86.0000})
layout:setLeftMargin(573.5000)
layout:setRightMargin(11.5000)
layout:setTopMargin(30.0000)
layout:setBottomMargin(84.0000)
Panel_1:addChild(Button_3)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

